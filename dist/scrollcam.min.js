/**
 * @fileoverview ScrollingCamera extends the class Phaser.Cameras.Scene2D.Camera of Phaser 3 framework,
 * adding the capacity of vertical scrolling by dragging or using the mouse wheel.
 * @author       Juan Jose Capellan <soycape@hotmail.com>
 * @copyright    2019 Juan Jose Capellan
 * @license      {@link https://github.com/jjcapellan/Phaser3-ScrollingCamera/blob/master/LICENSE | MIT license}
 * @version      1.0.0
 */
class ScrollingCamera extends Phaser.Cameras.Scene2D.Camera{constructor(scene,{x:x=0,y:y=0,width:width,height:height,top:top=0,bottom:bottom=5e3,wheel:wheel=!1,drag:drag=.95,minSpeed:minSpeed=4,snap:snap=!1,snapConfig:snapConfig={}}){super(x,y,width,height),this.scene=scene,this.x=x,this.y=y,this.width=width||this.scene.game.config.width,this.height=height||this.scene.game.config.height,this.top=top,this.bottom=bottom-this.height,this.wheel=wheel,this.drag=drag,this.minSpeed=minSpeed,this.snap=snap,this.snapGrid=snapConfig,this.snapGrid.topMargin=void 0===snapConfig.topMargin?0:snapConfig.topMargin,this.snapGrid.padding=snapConfig.padding||20,this.snapGrid.deadZone=void 0===snapConfig.deadZone?.4:snapConfig.deadZone,this.init()}init(){this.scrollY=this.top||this.y,this._rectangle=new Phaser.Geom.Rectangle(this.x,this.y,this.width,this.height),this._speed=0,this._startY=this.scrollY,this._endY=this.scrollY,this._startTime=0,this._endTime=0,this.setDragEvent(),this.wheel&&this.setWheelEvent(),this.scene.cameras.addExisting(this)}setSpeed(){let t=this,distance=t._endY-t._startY,duration=(t._endTime-t._startTime)/1e3;this._speed=distance/duration}setDragEvent(){this.scene.input.on("pointermove",this.dragHandler,this),this.scene.input.on("pointerup",this.upHandler,this),this.scene.input.on("pointerdown",this.downHandler,this)}setWheelEvent(){window.addEventListener("wheel",this.wheelHandler.bind(this))}downHandler(){this._startY=this.scrollY,this._startTime=performance.now()}dragHandler(pointer){pointer.isDown&&this.isOver(pointer)&&(this.startY=this.scrollY,this.scrollY-=pointer.position.y-pointer.prevPosition.y)}upHandler(){this._endY=this.scrollY,this._endTime=performance.now(),this.setSpeed()}wheelHandler(event){this.isOver(this.scene.input.activePointer)&&(this.scrollY+=event.deltaY)}isOver(pointer){return this._rectangle.contains(pointer.x,pointer.y)}clampScroll(){this.scrollY=Phaser.Math.Clamp(this.scrollY,this.top,this.bottom),this._endY=this.scrollY}update(time,delta){if(this.scrollY+=this._speed*(delta/1e3),this._speed*=this.drag,Math.abs(this._speed)<this.minSpeed&&(this._speed=0,this.snap&&!this.scene.input.activePointer.isDown)){let snapTop=this.top+this.snapGrid.topMargin,snapPosition=this.scrollY-snapTop,gap=this.snapGrid.padding,gapRatio=snapPosition/gap,gapRatioRemain=gapRatio%1;Math.abs(.5-gapRatioRemain)>=this.snapGrid.deadZone/2&&(this.scrollY=snapTop+Math.round(gapRatio)*gap)}this.clampScroll()}destroy(){this.emit(Events.DESTROY,this),window.removeEventListener("wheel",this.wheelHandler),this.removeAllListeners(),this.matrix.destroy(),this.culledObjects=[],this._customViewport&&this.sceneManager.customViewports--,this._bounds=null,this.scene=null,this.scaleManager=null,this.sceneManager=null}}